/* Generated by wayland-scanner 1.19.0 */

#ifndef LLP_EXTENSION_CLIENT_PROTOCOL_H
#define LLP_EXTENSION_CLIENT_PROTOCOL_H

#include <stdint.h>
#include <stddef.h>
#include "wayland-client.h"

#ifdef  __cplusplus
extern "C" {
#endif

/**
 * @page page_llp_extension The llp_extension protocol
 * @section page_ifaces_llp_extension Interfaces
 * - @subpage page_iface_llp_interface - 
 */
struct llp_interface;

#ifndef LLP_INTERFACE_INTERFACE
#define LLP_INTERFACE_INTERFACE
/**
 * @page page_iface_llp_interface llp_interface
 * @section page_iface_llp_interface_api API
 * See @ref iface_llp_interface.
 */
/**
 * @defgroup iface_llp_interface The llp_interface interface
 */
extern const struct wl_interface llp_interface_interface;
#endif

/**
 * @ingroup iface_llp_interface
 * @struct llp_interface_listener
 */
struct llp_interface_listener {
	/**
	 */
	void (*onfunction1)(void *data,
			    struct llp_interface *llp_interface,
			    int32_t x,
			    int32_t y,
			    int32_t w,
			    int32_t h);
};

/**
 * @ingroup iface_llp_interface
 */
static inline int
llp_interface_add_listener(struct llp_interface *llp_interface,
			   const struct llp_interface_listener *listener, void *data)
{
	return wl_proxy_add_listener((struct wl_proxy *) llp_interface,
				     (void (**)(void)) listener, data);
}

#define LLP_INTERFACE_FUNCTION1 0

/**
 * @ingroup iface_llp_interface
 */
#define LLP_INTERFACE_ONFUNCTION1_SINCE_VERSION 1

/**
 * @ingroup iface_llp_interface
 */
#define LLP_INTERFACE_FUNCTION1_SINCE_VERSION 1

/** @ingroup iface_llp_interface */
static inline void
llp_interface_set_user_data(struct llp_interface *llp_interface, void *user_data)
{
	wl_proxy_set_user_data((struct wl_proxy *) llp_interface, user_data);
}

/** @ingroup iface_llp_interface */
static inline void *
llp_interface_get_user_data(struct llp_interface *llp_interface)
{
	return wl_proxy_get_user_data((struct wl_proxy *) llp_interface);
}

static inline uint32_t
llp_interface_get_version(struct llp_interface *llp_interface)
{
	return wl_proxy_get_version((struct wl_proxy *) llp_interface);
}

/** @ingroup iface_llp_interface */
static inline void
llp_interface_destroy(struct llp_interface *llp_interface)
{
	wl_proxy_destroy((struct wl_proxy *) llp_interface);
}

/**
 * @ingroup iface_llp_interface
 */
static inline void
llp_interface_function1(struct llp_interface *llp_interface, int32_t x, int32_t y, int32_t w, int32_t h)
{
	wl_proxy_marshal((struct wl_proxy *) llp_interface,
			 LLP_INTERFACE_FUNCTION1, x, y, w, h);
}

#ifdef  __cplusplus
}
#endif

#endif
