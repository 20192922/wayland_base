/* Generated by wayland-scanner 1.20.0 */

#ifndef MY_EXTENSION_CLIENT_PROTOCOL_H
#define MY_EXTENSION_CLIENT_PROTOCOL_H

#include <stdint.h>
#include <stddef.h>
#include "wayland-client.h"

#ifdef  __cplusplus
extern "C" {
#endif

/**
 * @page page_my_extension The my_extension protocol
 * @section page_ifaces_my_extension Interfaces
 * - @subpage page_iface_my_interface - 
 */
struct my_interface;

#ifndef MY_INTERFACE_INTERFACE
#define MY_INTERFACE_INTERFACE
/**
 * @page page_iface_my_interface my_interface
 * @section page_iface_my_interface_api API
 * See @ref iface_my_interface.
 */
/**
 * @defgroup iface_my_interface The my_interface interface
 */
extern const struct wl_interface my_interface_interface;
#endif

/**
 * @ingroup iface_my_interface
 * @struct my_interface_listener
 */
struct my_interface_listener {
	/**
	 */
	void (*onfunction1)(void *data,
			    struct my_interface *my_interface,
			    int32_t x,
			    int32_t y,
			    int32_t w,
			    int32_t h);
};

/**
 * @ingroup iface_my_interface
 */
static inline int
my_interface_add_listener(struct my_interface *my_interface,
			  const struct my_interface_listener *listener, void *data)
{
	return wl_proxy_add_listener((struct wl_proxy *) my_interface,
				     (void (**)(void)) listener, data);
}

#define MY_INTERFACE_FUNCTION1 0

/**
 * @ingroup iface_my_interface
 */
#define MY_INTERFACE_ONFUNCTION1_SINCE_VERSION 1

/**
 * @ingroup iface_my_interface
 */
#define MY_INTERFACE_FUNCTION1_SINCE_VERSION 1

/** @ingroup iface_my_interface */
static inline void
my_interface_set_user_data(struct my_interface *my_interface, void *user_data)
{
	wl_proxy_set_user_data((struct wl_proxy *) my_interface, user_data);
}

/** @ingroup iface_my_interface */
static inline void *
my_interface_get_user_data(struct my_interface *my_interface)
{
	return wl_proxy_get_user_data((struct wl_proxy *) my_interface);
}

static inline uint32_t
my_interface_get_version(struct my_interface *my_interface)
{
	return wl_proxy_get_version((struct wl_proxy *) my_interface);
}

/** @ingroup iface_my_interface */
static inline void
my_interface_destroy(struct my_interface *my_interface)
{
	wl_proxy_destroy((struct wl_proxy *) my_interface);
}

/**
 * @ingroup iface_my_interface
 */
static inline void
my_interface_function1(struct my_interface *my_interface, int32_t x, int32_t y, int32_t w, int32_t h)
{
	wl_proxy_marshal_flags((struct wl_proxy *) my_interface,
			 MY_INTERFACE_FUNCTION1, NULL, wl_proxy_get_version((struct wl_proxy *) my_interface), 0, x, y, w, h);
}

#ifdef  __cplusplus
}
#endif

#endif
